/******************************************************************************
 * Copyright (c) 2013 IBM Corporation
 * All rights reserved.
 * This program and the accompanying materials
 * are made available under the terms of the BSD License
 * which accompanies this distribution, and is available at
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * Contributors:
 *     IBM Corporation - initial implementation
 *****************************************************************************/
/*
 * libusb bindings for SLOF - implementation
 */

#include <usb.h>


/************************************************/
/* Register with the usb-core                   */
/* SLOF:   USB-OHCI-REGISTER  ( -- )            */
/* LIBNEWUSB: usb_ohci_register(void)           */
/************************************************/
PRIM(USB_X2d_OHCI_X2d_REGISTER)
	usb_ohci_register();
MIRP

/************************************************/
/* Register with the usb-core                   */
/* SLOF:   USB-EHCI-REGISTER  ( -- )            */
/* LIBNEWUSB: usb_ehci_register(void)           */
/************************************************/
PRIM(USB_X2d_EHCI_X2d_REGISTER)
	usb_ehci_register();
MIRP

/************************************************/
/* Initialize hcidev with the usb-core          */
/* SLOF:   USB-HCD-INIT  ( hcidev -- )          */
/* LIBNEWUSB: usb_hcd_init(hcidev)              */
/************************************************/
PRIM(USB_X2d_HCD_X2d_INIT)
	void *hcidev = TOS.a; POP;
	usb_hcd_init(hcidev);
MIRP

/************************************************/
/* Initialize hid                               */
/* SLOF:   USB-HID-INIT  ( dev -- true | false )*/
/* LIBNEWUSB: usb_hid_init(hcidev)              */
/************************************************/
PRIM(USB_X2d_HID_X2d_INIT)
	void *dev = TOS.a;
	TOS.n = usb_hid_init(dev);
MIRP

/************************************************/
/* Exit hid                                     */
/* SLOF:   USB-HID-EXIT  ( dev -- true | false )*/
/* LIBNEWUSB: usb_hid_exit(hcidev)              */
/************************************************/
PRIM(USB_X2d_HID_X2d_EXIT)
	void *dev = TOS.a;
	TOS.n = usb_hid_exit(dev);
MIRP

/************************************************/
/* Read usb keyboard for key                    */
/* SLOF:   USB-READ-KEYB  ( dev --              */
/*                        ( key | false  ))     */
/* LIBNEWUSB: usb_read_keyb                     */
/************************************************/
PRIM(USB_X2d_READ_X2d_KEYB)
	void *dev = TOS.a;
	TOS.n = usb_read_keyb(dev);
MIRP

/************************************************/
/* Is USB KEY available                         */
/* SLOF:   USB-KEY-AVAILABLE ( dev -- ( true |  */
/*                                      false ))*/
/* LIBNEWUSB: usb_key_available                 */
/************************************************/
PRIM(USB_X2d_KEY_X2d_AVAILABLE)
	void *dev = TOS.a;
	TOS.n = usb_key_available(dev);
MIRP

/************************************************/
/* Initialize and enumerate generic hub         */
/* SLOF: USB-HUB-INIT ( dev -- true | false )   */
/* LIBNEWUSB: usb_hub_init                      */
/************************************************/
PRIM(USB_X2d_HUB_X2d_INIT)
	void *dev = TOS.a;
	TOS.n = usb_hub_init(dev);
MIRP
